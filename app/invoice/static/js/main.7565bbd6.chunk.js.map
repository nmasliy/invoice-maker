{"version":3,"sources":["images/icon-close.svg","pages/InvoicePage/styles.module.scss","images/logo-placeholder.svg","images/icon-edit.svg","images/icon-from.svg","images/icon-to.svg","images/icon-plus.svg","images/icon-pay.svg","fonts/GraphikRegular.otf","fonts/GraphikMedium.otf","fonts/GraphikSemibold.otf","fonts/GraphikBold.otf","images/icon_send.svg","images/icon_send_2.svg","images/icon_download.svg","images/icon_preview.svg","components/styles.module.scss","pages/InvoicePage/EditableTextWrapper.tsx","data/initialData.ts","styles/styles.ts","styles/compose.ts","scripts/helpers.ts","components/EditableInput.tsx","components/EditableTextarea.tsx","components/EditableCalendarInput.tsx","components/EditableFileImage.tsx","components/Document.tsx","components/Page.tsx","components/View.tsx","components/Text.tsx","components/Label.tsx","components/TextWrap.tsx","pages/InvoicePage/BlockFrom/NoDataBlockFrom.tsx","components/Modal.tsx","components/BlueButton.tsx","pages/InvoicePage/BlockFrom/BlockFrom.tsx","pages/InvoicePage/BlockTo/NoDataBlockTo.tsx","pages/InvoicePage/BlockTo/BlockTo.tsx","pages/InvoicePage/BlockPayment/NoDataBlockPayment.tsx","pages/InvoicePage/BlockPayment/BlockPayment.tsx","components/EditableSelect.tsx","pages/InvoicePage/InvoicePage.tsx","components/DownloadPDF.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","DIRECTIONS","initialProductLine","title","description","quantity","tax","rate","CURRENCIES","USD","CADA","EUR","UAH","RUB","initialInvoice","logo","discountPercentage","discountAmount","discountLabel","documentType","companyName","name","companyPhone","companyMobile","companyEmail","companyWebsite","companyAddress","companyAddress2","billTo","billFrom","shipTo","clientName","clientBusinessName","clientMobile","clientPhone","clientEmail","shippingCostAmount","amountPaid","shippingCostLabel","shippingAddress","trackingN","clientAddress","clientAddress2","invoiceTitleLabel","invoiceTitle","invoiceDateLabel","invoiceDate","invoiceDueDateLabel","invoiceDueDate","productLineDescription","productLineQuantity","productLineTax","productLineQuantityRate","productLineQuantityAmount","productLines","subTotalLabel","taxLabel","totalLabel","balanceLabel","amountPaidLabel","currency","paymentLabel","payEmail","payPayableTo","payBankTransfer","payOther","notesLabel","notes","styles","view","display","fontWeight","fontSize","textAlign","dark","color","justifyContent","white","backgroundColor","flex","flexDirection","flexWrap","paddingRight","whiteSpace","height","left","width","wordBreak","feature","letterSpacing","row","borderBottom","marginTop","marginBottom","padding","paddingBottom","right","bold","page","fontFamily","span","alignItems","marginRight","labelPadding","stylesForFile","compose","classes","isFile","css","stylesDefault","replace","split","forEach","className","undefined","Object","assign","helpers","parseLocaleNumber","value","_tempValue","String","parseFloat","toLocaleString","minimumFractionDigits","maximumFractionDigits","getNumFromLocale","getInt","parseInt","EditableInput","placeholder","label","suffix","prefix","type","onChange","pdfMode","style","onKeyPress","e","key","RegExp","test","target","includes","preventDefault","EditableTextarea","rows","minRows","EditableCalendarInput","selected","date","dateFormat","EditableFileImage","onChangeImage","fileInput","useRef","handleUpload","current","click","maxWidth","src","alt","onClick","ref","tabIndex","accept","files","length","reader","FileReader","addEventListener","result","readAsDataURL","Document","children","Page","size","View","Text","Label","labelStyle","EditableTextWrapper","direction","LEFT","classNames","editableTextWrapper","RIGHT","child","editBtnWrapper","iconEdit","TextWrap","NoDataBlockFrom","noDataWrapper","iconFrom","noDataTitle","Modal","open","onClose","headerText","headerClass","innerClass","closeOnOverlayClick","onBackdropClick","event","currentTarget","cn","modal","backdrop","inner","header","closeIcon","iconClose","innerContent","BlueButton","props","BlockFrom","invoice","handleChange","useState","isOpenModal","setIsOpenModal","modalData","setModalData","modalHandleChange","newModalData","fromKeys","filter","el","NoDataBlockTo","iconTo","BlockTo","addShipInfoIsOpen","setAddShipInfoIsOpen","toKeys","toShipKeys","addBtnWrapper","PlusIcon","addBtnWrapperText","NoDataBlockPayment","payBlock","iconPay","BlockPayment","payKeys","EditableSelect","options","closeOnSelect","id","printOptions","search","Font","register","family","fonts","GraphikRegular","GraphikMedium","GraphikSemibold","GraphikBold","InvoicePage","setInvoice","subTotal","setSubTotal","saleTax","setSaleTax","totalAmount","setTotalAmount","discountErr","setDiscountErr","isAmountPaid","Date","valueOf","setDate","getDate","balanceDueSum","calculateTotal","taxAmount","_totalAmount","newInvoice","tempVal","Number","toFixed","handleTotalChange","newData","handleProductLineChange","index","map","productLine","i","newProductLine","useEffect","quantityNumber","rateNumber","taxRate","amount","logoPlaceholder","format","Array","isArray","calculateAmount","aria-label","handleRemove","keys","selectedValue","Download","data","updatePdfMode","show","setShow","timeout","setTimeout","clearTimeout","send2Image","sendImage","downloadImage","document","fileName","toLowerCase","previewImage","App","setPdfMode","DownloadPDF","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7565bbd6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-close.3e91b1e1.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"editableTextWrapper\":\"styles_editableTextWrapper__32iQG\",\"child\":\"styles_child__3P-5g\",\"left\":\"styles_left__11o9V\",\"right\":\"styles_right__3t2OV\",\"noDataWrapper\":\"styles_noDataWrapper__1mnKU\",\"noDataTitle\":\"styles_noDataTitle__3E9Zq\",\"payBlock\":\"styles_payBlock__2kS2v\",\"discountErr\":\"styles_discountErr__1X9Vw\",\"addBtnWrapper\":\"styles_addBtnWrapper__3uhJg\",\"addBtnWrapperText\":\"styles_addBtnWrapperText__hpghk\"};","module.exports = __webpack_public_path__ + \"static/media/logo-placeholder.294afd10.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-edit.52a3a163.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-from.81539852.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-to.d59df9dc.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-plus.dba9424e.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-pay.8b247379.svg\";","module.exports = __webpack_public_path__ + \"static/media/GraphikRegular.e2a1876e.otf\";","module.exports = __webpack_public_path__ + \"static/media/GraphikMedium.4a127c95.otf\";","module.exports = __webpack_public_path__ + \"static/media/GraphikSemibold.99c54fc5.otf\";","module.exports = __webpack_public_path__ + \"static/media/GraphikBold.8a604ed5.otf\";","module.exports = __webpack_public_path__ + \"static/media/icon_send.99b79584.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon_send_2.023ee158.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon_download.d2fab8bf.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon_preview.20e5c2a5.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"styles_modal__3RVMn\",\"backdrop\":\"styles_backdrop__3q6W3\",\"fadeIn\":\"styles_fadeIn__w0hHO\",\"header\":\"styles_header__2n3bD\",\"inner\":\"styles_inner__6cAE6\",\"overflowDisable\":\"styles_overflowDisable__16NF6\",\"innerContent\":\"styles_innerContent__15-15\",\"closeIcon\":\"styles_closeIcon__28Yo1\"};","import React, { FC } from 'react';\nimport iconEdit from '../../images/icon-edit.svg';\nimport css from './styles.module.scss';\nimport classNames from 'classnames';\nimport { View } from '@react-pdf/renderer';\nimport compose from \"../../styles/compose\";\n\n\nexport enum DIRECTIONS {\n  LEFT = 'LEFT',\n  RIGHT = 'RIGHT',\n}\n\ninterface Props extends React.HTMLAttributes<HTMLElement> {\n  pdfMode?: boolean;\n  direction?: DIRECTIONS;\n}\n\nconst EditableTextWrapper: FC<Props> = ({\n  direction = DIRECTIONS.LEFT,\n  pdfMode,\n  children,\n  className,\n}) => {\n  return pdfMode ? (\n    <View style={compose((className ? className : ''))}>{children}</View>\n  ) : (\n    <div\n      className={classNames(css.editableTextWrapper, className, {\n        [css.right]: direction === DIRECTIONS.RIGHT,\n        [css.left]: direction === DIRECTIONS.LEFT,\n      })}\n    >\n      <div className={css.child}>{children}</div>{' '}\n      <div className={css.editBtnWrapper}>\n        <img src={iconEdit} alt=\"edit_img\" />\n      </div>\n    </div>\n  );\n};\n\nexport default EditableTextWrapper;\n","import { ProductLine, Invoice } from './types';\n\nexport const initialProductLine: ProductLine = {\n  title: '',\n  description: '',\n  quantity: '1',\n  tax: '0',\n  rate: '0.00',\n};\n\nexport const CURRENCIES = {\n  USD: 'USD',\n  CADA: 'CADA',\n  EUR: 'EUR',\n  UAH: 'UAH',\n  RUB: 'RUB',\n};\n\nexport const initialInvoice: Invoice = {\n  logo: '',\n  // logoWidth: 100,\n\n  discountPercentage: '0.00',\n  discountAmount: '0.00',\n  discountLabel: 'Discount',\n\n  documentType: 'Invoice',\n  companyName: '',\n  name: '',\n  companyPhone: '',\n  companyMobile: '',\n  companyEmail: '',\n  companyWebsite: '',\n  companyAddress: '',\n  companyAddress2: '',\n  billTo: 'Bill To',\n  billFrom: 'From',\n  shipTo: 'Ship to',\n  clientName: '',\n  clientBusinessName: '',\n  clientMobile: '',\n  clientPhone: '',\n  clientEmail: '',\n  shippingCostAmount: '0.00',\n  amountPaid: '0.00',\n  shippingCostLabel: 'Shipping Cost',\n  shippingAddress: '',\n  trackingN: '',\n  clientAddress: '',\n  clientAddress2: '',\n  invoiceTitleLabel: 'Invoice no.:',\n  invoiceTitle: '',\n  invoiceDateLabel: 'Invoice date:',\n  invoiceDate: '',\n  invoiceDueDateLabel: 'Due:',\n  invoiceDueDate: '',\n  productLineDescription: 'DESCRIPTION',\n  productLineQuantity: 'QTY',\n  productLineTax: 'TAX',\n  productLineQuantityRate: 'RATE',\n  productLineQuantityAmount: 'AMOUNT',\n  productLines: [\n    // {\n    //   description: 'Brochure Design',\n    //   quantity: '2',\n    //   rate: '100.00',\n    // },\n    { ...initialProductLine },\n  ],\n  subTotalLabel: 'Subtotal:',\n  taxLabel: 'Sales Tax',\n  totalLabel: 'Total',\n  balanceLabel: 'Balance Due:',\n  amountPaidLabel: 'Amount paid',\n  currency: CURRENCIES.USD,\n  paymentLabel: 'Payment instruction',\n  payEmail: '',\n  payPayableTo: '',\n  payBankTransfer: '',\n  payOther: '',\n  notesLabel: 'Notes',\n  notes: '',\n};\n","import { CSSClasses } from '../data/types';\n\nconst colorDark = '#000';\nconst colorDark2 = '#0075FF';\nconst colorGray = '#e3e3e3';\nconst colorWhite = '#fff';\n\nconst styles: CSSClasses = {\n  view: {\n    display: 'block',\n  },\n  'document-type': {\n    fontWeight: 600,\n    fontSize: '46px',\n    // lineHeight: \"45px\",\n    textAlign: 'right',\n  },\n  dark: {\n    color: colorDark,\n  },\n  'justify-end': {\n    justifyContent: 'flex-end',\n  },\n\n  white: {\n    color: colorWhite,\n  },\n\n  'bg-dark': {\n    backgroundColor: colorDark2,\n  },\n\n  'bg-gray': {\n    backgroundColor: colorGray,\n  },\n  'light-bold': {\n    fontWeight: 500,\n  },\n  flex: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'nowrap',\n  },\n\n  'w-auto': {\n    flex: 1,\n    paddingRight: '8px',\n  },\n\n  'ml-30': {\n    flex: 1,\n  },\n\n  'no-wrap': { whiteSpace: 'nowrap' },\n  'h-50': {\n    height: '50px',\n  },\n  left: {\n    textAlign: 'left',\n  },\n\n  'w-100': {\n    width: '100%',\n  },\n\n  'w-50': {\n    width: '50%',\n  },\n\n  'w-55': {\n    width: '55%',\n  },\n\n  'w-45': {\n    width: '45%',\n  },\n\n  'w-60': {\n    width: '60%',\n  },\n\n  'w-38': {\n    width: '31%',\n  },\n\n  'word-break': { wordBreak: 'break-word' },\n\n  'w-40': {\n    width: '40%',\n  },\n\n  'w-48': {\n    width: '48%',\n  },\n\n  'w-17': {\n    width: '17%',\n  },\n\n  'w-18': {\n    width: '18%',\n  },\n\n  feature: { fontSize: '14px', letterSpacing: '0.2px', color: '#9595A8' },\n\n  row: {\n    borderBottom: `1px solid ${colorGray}`,\n  },\n\n  'mt-40': {\n    marginTop: '40px',\n  },\n\n  'mt-50': {\n    marginTop: '50px',\n  },\n\n  'mt-30': {\n    marginTop: '30px',\n  },\n\n  'mt-20': {\n    marginTop: '20px',\n  },\n\n  'mt-10': {\n    marginTop: '10px',\n  },\n\n  'mb-5': {\n    marginBottom: '5px',\n  },\n\n  'mb-26': {\n    marginBottom: '26px',\n  },\n\n  'p-4-13': {\n    padding: '4px 13px',\n  },\n\n  'p-5': {\n    padding: '5px',\n  },\n\n  'pb-10': {\n    paddingBottom: '10px',\n  },\n\n  'pb-14': {\n    paddingBottom: '14px',\n  },\n\n  right: {\n    textAlign: 'right',\n  },\n\n  bold: {\n    fontWeight: 'bold',\n  },\n\n  'semi-bold': {\n    fontWeight: 600,\n  },\n\n  'sub-title': {\n    fontWeight: 600,\n    fontSize: '22px',\n    letterSpacing: '0.2px',\n    paddingBottom: '22px',\n  },\n\n  'fs-20': {\n    fontSize: '20px',\n  },\n\n  'fs-45': {\n    fontSize: '45px',\n  },\n\n  page: {\n    fontFamily: 'Graphik',\n    fontSize: '13px',\n    wordBreak: 'break-word',\n    color: '#000',\n    padding: '40px 35px',\n  },\n\n  span: {\n    display: 'block',\n    padding: '4px 12px 4px 0',\n  },\n\n  'justify-space-between': {\n    justifyContent: 'space-between',\n  },\n\n  logo: {\n    display: 'block',\n  },\n\n  title: {\n    fontSize: '17px',\n    fontWeight: 600,\n  },\n  'align-center': {\n    alignItems: 'center',\n  },\n  'mt-100': { marginTop: '100px' },\n  'mt-25': { marginTop: '25px' },\n  'mb-21': { marginBottom: '21px' },\n  'mb-100': { marginBottom: '100px' },\n  'mr-10': { marginRight: '10px' },\n  labelPadding: { padding: '10px 10px 10px 12px' },\n};\n\nexport const stylesForFile: CSSClasses = {\n  view: {\n    display: 'block',\n  },\n  'document-type': {\n    fontWeight: 600,\n    fontSize: '41px',\n    // lineHeight: \"45px\",\n    textAlign: 'right',\n  },\n  dark: {\n    color: colorDark,\n  },\n\n  'justify-end': {\n    justifyContent: 'flex-end',\n  },\n\n  white: {\n    color: colorWhite,\n  },\n\n  'bg-dark': {\n    backgroundColor: colorDark2,\n  },\n\n  'bg-gray': {\n    backgroundColor: colorGray,\n  },\n  'light-bold': {\n    fontWeight: 500,\n  },\n  flex: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'nowrap',\n  },\n\n  'w-auto': {\n    flex: 1,\n    paddingRight: '8px',\n  },\n\n  'ml-30': {\n    flex: 1,\n  },\n\n  'no-wrap': { whiteSpace: 'nowrap' },\n  'h-50': {\n    height: '50px',\n  },\n  left: {\n    textAlign: 'left',\n  },\n  'w-100': {\n    width: '100%',\n  },\n\n  'w-50': {\n    width: '50%',\n  },\n\n  'w-55': {\n    width: '55%',\n  },\n\n  'w-45': {\n    width: '45%',\n  },\n\n  'w-60': {\n    width: '60%',\n  },\n\n  'w-38': {\n    width: '31%',\n  },\n\n  'word-break': { wordBreak: 'break-word' },\n\n  'w-40': {\n    width: '40%',\n  },\n\n  'w-48': {\n    width: '48%',\n  },\n\n  'w-17': {\n    width: '17%',\n  },\n\n  'w-18': {\n    width: '20%',\n  },\n\n  feature: { fontSize: '9px', letterSpacing: '0.2px', color: '#9595A8' },\n\n  row: {\n    borderBottom: `1px solid ${colorGray}`,\n  },\n\n  'mt-40': {\n    marginTop: '40px',\n  },\n\n  'mt-50': {\n    marginTop: '50px',\n  },\n\n  'mt-30': {\n    marginTop: '30px',\n  },\n\n  'mt-20': {\n    marginTop: '20px',\n  },\n\n  'mt-10': {\n    marginTop: '10px',\n  },\n\n  'mb-5': {\n    marginBottom: '5px',\n  },\n\n  'mb-26': {\n    marginBottom: '26px',\n  },\n\n  'p-4-13': {\n    padding: '4px 13px',\n  },\n\n  'p-5': {\n    padding: '5px',\n  },\n\n  'pb-10': {\n    paddingBottom: '10px',\n  },\n\n  'pb-14': {\n    paddingBottom: '14px',\n  },\n\n  right: {\n    textAlign: 'right',\n  },\n\n  bold: {\n    fontWeight: 'bold',\n  },\n\n  'semi-bold': {\n    fontWeight: 600,\n  },\n\n  'sub-title': {\n    fontWeight: 600,\n    fontSize: '17px',\n    letterSpacing: '0.2px',\n    paddingBottom: '22px',\n  },\n\n  'fs-20': {\n    fontSize: '15px',\n  },\n\n  'fs-45': {\n    fontSize: '40px',\n  },\n\n  'fs-17': {\n    fontSize: '12px',\n  },\n\n  page: {\n    fontFamily: 'Graphik',\n    fontSize: '8px',\n    wordBreak: 'break-word',\n    color: '#000',\n    padding: '40px 35px',\n  },\n\n  span: {\n    display: 'block',\n    fontSize: '8px',\n    padding: '4px 12px 4px 0',\n  },\n\n  'justify-space-between': {\n    justifyContent: 'space-between',\n  },\n\n  logo: {\n    display: 'block',\n  },\n\n  title: {\n    fontSize: '12px',\n    fontWeight: 600,\n  },\n  'align-center': {\n    alignItems: 'center',\n  },\n  'mt-100': { marginTop: '100px' },\n  'mt-25': { marginTop: '25px' },\n  'mb-21': { marginBottom: '21px' },\n  'mb-100': { marginBottom: '100px' },\n  'mr-10': { marginRight: '10px' },\n  labelPadding: { padding: '10px 10px 10px 12px' },\n};\n\nexport default styles;\n","import ReactPDF from '@react-pdf/renderer';\nimport stylesDefault, { stylesForFile } from './styles';\n\nconst compose = (classes: string, isFile?: boolean): ReactPDF.Styles => {\n  const css: ReactPDF.Styles = {};\n  const styles = isFile ? stylesForFile : stylesDefault;\n  const classesArray: string[] = classes.replace(/\\s+/g, ' ').split(' ');\n\n  classesArray.forEach((className) => {\n    if (typeof styles[className] !== undefined) {\n      Object.assign(css, styles[className]);\n    }\n  });\n\n  return css;\n};\n\nexport default compose;\n","const helpers = {\n  parseLocaleNumber: (value: number | string = 0): string => {\n    let _tempValue = String(value).replace(/[^0-9.]/g, '');\n\n    _tempValue = parseFloat(_tempValue).toLocaleString('en-US', {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    });\n    return _tempValue;\n  },\n  getNumFromLocale: (value: number | string) => {\n    return parseFloat(String(value || 0).replace(/[^0-9.]/g, ''));\n  },\n  getInt: (value: number | string = 0) => {\n    return parseInt(String(value || 0).replace(/[^0-9.]/g, ''));\n  },\n};\n\nexport default helpers;\n","import React, { FC } from 'react';\nimport { Text } from '@react-pdf/renderer';\nimport compose from '../styles/compose';\nimport helpers from '../scripts/helpers';\n\ninterface Props {\n  className?: string;\n  placeholder?: string;\n  value?: string;\n  suffix?: string;\n  prefix?: string;\n  type?: 'number' | 'integer' | 'string';\n  label?: string;\n  onChange?: (value: string) => void;\n  pdfMode?: boolean;\n  isFile?: boolean;\n}\n\nconst EditableInput: FC<Props> = ({\n  className,\n  placeholder,\n  label,\n  value,\n  suffix = '',\n  prefix = '',\n  type = 'string',\n  onChange,\n  pdfMode,\n  isFile,\n}) => {\n  return (\n    <>\n      {pdfMode ? (\n        <Text style={compose('span ' + (className ? className : ''), isFile)}>\n          {(prefix ? prefix : '') + value + (suffix ? suffix : '')}\n        </Text>\n      ) : (\n        <div>\n          {!!label && <label>{label}</label>}\n          <input\n            type=\"text\"\n            className={'input ' + (className ? className : '')}\n            placeholder={placeholder || ''}\n            value={prefix + value + suffix || ''}\n            onKeyPress={(e) => {\n              if (type === 'number' && e.key) {\n                if (!new RegExp(/^[0-9.]$/g).test(e.key)) {\n                  e.preventDefault();\n                } else if (e.key === '.' && e.target['value'].includes('.')) {\n                  e.preventDefault();\n                }\n              } else if (type === 'integer') {\n                if (!new RegExp(/^[0-9]$/g).test(e.key)) {\n                  e.preventDefault();\n                }\n              }\n            }}\n            onChange={\n              onChange\n                ? (e) => {\n                    let _tempValue = e.target.value;\n                    if (prefix) {\n                      _tempValue = _tempValue.replace(prefix, '');\n                    }\n                    if (suffix) {\n                      _tempValue = _tempValue.replace(suffix, '');\n                    }\n\n                    if (type === 'number' || type === 'integer') {\n                      _tempValue = _tempValue.replace(/[^0-9.]/g, '');\n                      _tempValue = String(\n                        type === 'integer'\n                          ? helpers.getInt(_tempValue)\n                          : helpers.getNumFromLocale(_tempValue),\n                      );\n                    }\n\n                    onChange(_tempValue);\n                  }\n                : undefined\n            }\n          />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default EditableInput;\n","import React, { FC } from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { Text } from '@react-pdf/renderer';\nimport compose from '../styles/compose';\n\ninterface Props {\n  className?: string;\n  placeholder?: string;\n  value?: string;\n  onChange?: (value: string) => void;\n  pdfMode?: boolean;\n  isFile?: boolean;\n  rows?: number;\n}\n\nconst EditableTextarea: FC<Props> = ({\n  className,\n  placeholder,\n  value,\n  onChange,\n  pdfMode,\n  rows,\n  isFile,\n}) => {\n  return (\n    <>\n      {pdfMode ? (\n        <Text style={compose('span ' + (className ? className : ''), isFile)}>{value}</Text>\n      ) : (\n        <TextareaAutosize\n          minRows={rows || 1}\n          className={'input ' + (className ? className : '')}\n          placeholder={placeholder || ''}\n          value={value || ''}\n          onChange={onChange ? (e) => onChange(e.target.value) : undefined}\n        />\n      )}\n    </>\n  );\n};\n\nexport default EditableTextarea;\n","import React, { FC } from 'react';\nimport { Text } from '@react-pdf/renderer';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport compose from '../styles/compose';\n\ninterface Props {\n  className?: string;\n  value?: string;\n  selected?: Date;\n  onChange?: (date: Date | [Date, Date] | null) => void;\n  pdfMode?: boolean;\n  isFile?: boolean;\n}\n\nconst EditableCalendarInput: FC<Props> = ({\n  className,\n  value,\n  selected,\n  onChange,\n  pdfMode,\n  isFile,\n}) => {\n  return (\n    <>\n      {pdfMode ? (\n        <Text style={compose('span ' + (className ? className : ''), isFile)}>{value}</Text>\n      ) : (\n        <DatePicker\n          className={'input ' + (className ? className : '')}\n          selected={selected}\n          onChange={onChange ? (date) => onChange(date) : (date) => null}\n          dateFormat=\"MMM dd, yyyy\"\n        />\n      )}\n    </>\n  );\n};\n\nexport default EditableCalendarInput;\n","import React, { FC, useRef } from 'react';\nimport { Image } from '@react-pdf/renderer';\nimport compose from '../styles/compose';\nimport 'rc-slider/assets/index.css';\n\ninterface Props {\n  className?: string;\n  placeholder?: any;\n  value?: string;\n  width?: number;\n  onChangeImage?: (value: string) => void;\n  pdfMode?: boolean;\n  isFile?: boolean;\n}\n\nconst EditableFileImage: FC<Props> = ({\n  className,\n  placeholder,\n  value,\n  width,\n  onChangeImage,\n  pdfMode,\n  isFile,\n}) => {\n  const fileInput = useRef<HTMLInputElement>(null);\n\n  const handleUpload = () => {\n    fileInput?.current?.click();\n  };\n\n  const handleChangeImage = () => {\n    if (fileInput?.current?.files) {\n      const files = fileInput.current.files;\n\n      if (files.length > 0 && typeof onChangeImage === 'function') {\n        const reader = new FileReader();\n\n        reader.addEventListener('load', () => {\n          if (typeof reader.result === 'string') {\n            onChangeImage(reader.result);\n          }\n        });\n\n        reader.readAsDataURL(files[0]);\n      }\n    }\n  };\n\n  const clearImage = () => {\n    if (typeof onChangeImage === 'function') {\n      onChangeImage('');\n    }\n  };\n\n  if (pdfMode && isFile) {\n    if (value) {\n      return (\n        <Image\n          style={{ ...compose(`image ${className ? className : ''}`), maxWidth: width }}\n          src={value}\n        />\n      );\n    } else {\n      return <></>;\n    }\n  } else if (pdfMode && !isFile) {\n    if (value) {\n      return (\n        <img\n          style={{ ...compose(`image ${className ? className : ''}`), maxWidth: width }}\n          src={value}\n        />\n      );\n    } else {\n      return <></>;\n    }\n  }\n\n  return (\n    <div className={`image ${value ? 'mb-5' : ''} ${className ? className : ''}`}>\n      {!value ? (\n        <button type=\"button\" className=\"image__upload\" onClick={handleUpload}>\n          {placeholder}\n        </button>\n      ) : (\n        <div className=\"image__logo-wrapper\">\n          <img\n            src={value}\n            className=\"image__img\"\n            alt={placeholder}\n            style={{ maxWidth: width || 100 }}\n          />\n\n          <button type=\"button\" className=\"image__change\" onClick={handleUpload}></button>\n\n          <button type=\"button\" className=\"image__remove\" onClick={clearImage} />\n        </div>\n      )}\n\n      <input\n        ref={fileInput}\n        tabIndex={-1}\n        type=\"file\"\n        accept=\"image/*\"\n        className=\"image__file\"\n        onChange={handleChangeImage}\n      />\n    </div>\n  );\n};\n\nexport default EditableFileImage;\n","import React, { FC } from 'react'\r\nimport { Document as PdfDocument } from '@react-pdf/renderer'\r\n\r\ninterface Props {\r\n  pdfMode?: boolean\r\n}\r\n\r\nconst Document: FC<Props> = ({ pdfMode, children }) => {\r\n  return <>{pdfMode ? <PdfDocument>{children}</PdfDocument> : <>{children}</>}</>\r\n}\r\n\r\nexport default Document\r\n","import React, { FC } from 'react'\r\nimport { Page as PdfPage } from '@react-pdf/renderer'\r\nimport compose from '../styles/compose'\r\n\r\ninterface Props {\r\n  className?: string\r\n  pdfMode?: boolean\r\n}\r\n\r\nconst Page: FC<Props> = ({ className, pdfMode, children }) => {\r\n  return (\r\n    <>\r\n      {pdfMode ? (\r\n        <PdfPage size=\"A4\" style={compose('page ' + (className ? className : ''))}>\r\n          {children}\r\n        </PdfPage>\r\n      ) : (\r\n        <div className={'page ' + (className ? className : '')}>{children}</div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Page\r\n","import React, { FC } from 'react';\nimport { View as PdfView } from '@react-pdf/renderer';\nimport compose from '../styles/compose';\n\ninterface Props {\n  className?: string;\n  pdfMode?: boolean;\n  onClick?: () => any;\n  style?: any;\n  isFile?: boolean;\n}\n\nconst View: FC<Props> = ({ className, style, pdfMode, onClick, children, isFile }) => {\n  return (\n    <>\n      {pdfMode ? (\n        <PdfView\n          style={{ ...compose('view ' + (className ? className : ''), isFile), ...(style || {}) }}\n        >\n          {children}\n        </PdfView>\n      ) : (\n        <div\n          style={style || {}}\n          onClick={onClick ? onClick : undefined}\n          className={'view ' + (className ? className : '')}\n        >\n          {children}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default View;\n","import React, { FC } from 'react';\nimport { Text as PdfText } from '@react-pdf/renderer';\nimport compose from '../styles/compose';\n\ninterface Props {\n  className?: string;\n  pdfMode?: boolean;\n  isFile?: boolean;\n  children?: string;\n}\n\nconst Text: FC<Props> = ({ className, pdfMode, children, isFile = false }) => {\n  return (\n    <>\n      {pdfMode ? (\n        <PdfText style={compose('span ' + (className ? className : ''), isFile)}>\n          {children}\n        </PdfText>\n      ) : (\n        <span className={'span ' + (className ? className : '')}>{children}</span>\n      )}\n    </>\n  );\n};\n\nexport default Text;\n","import React, { FC } from 'react';\nimport { Text, View } from '@react-pdf/renderer';\nimport compose from '../styles/compose';\n\ninterface Props {\n  children: any;\n  className?: string;\n  labelStyle?: object;\n  isFile?: boolean;\n}\n\nconst Label: FC<Props> = ({ children, className, isFile, labelStyle }) => {\n  return (\n    <View style={labelStyle}>\n      <Text style={compose('span ' + (className ? className : ''), isFile)}>{children}</Text>\n    </View>\n  );\n};\n\nexport default Label;\n","import React, { FC } from 'react';\nimport Text from '../components/Text';\n\ninterface Props {\n  className?: string;\n  value?: string;\n  isFile?: boolean;\n  pdfMode?: boolean;\n}\n\nconst TextWrap: FC<Props> = ({ className, value, isFile, pdfMode }) => {\n  return value ? (\n    // <Text style={compose('span ' + (className ? className : ''), isFile)}>{value}</Text>\n    <Text className={className} pdfMode={pdfMode} isFile={isFile}>\n      {value}\n    </Text>\n  ) : (\n    <></>\n  );\n};\n\nexport default TextWrap;\n","import React, { FC } from 'react';\nimport css from '../styles.module.scss';\nimport iconFrom from '../../../images/icon-from.svg';\n\ninterface Props {\n  pdfMode?: boolean;\n}\n\nconst NoDataBlockFrom: FC<Props> = ({ pdfMode }) => {\n  return pdfMode ? (\n    <></>\n  ) : (\n    <div className={css.noDataWrapper}>\n      <div>\n        <img src={iconFrom} alt=\"icon-from\" />\n      </div>\n      <div className={'flex align-center'}>\n        <div>\n          <div className={css.noDataTitle}>Add Business Details</div>\n          <div className={'mt-10'}>Who is this invoice from? </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NoDataBlockFrom;\n","import * as React from 'react';\nimport iconClose from '../images/icon-close.svg';\nimport cn from 'classnames';\n\nimport styles from './styles.module.scss';\n\ninterface Props {\n  open: boolean;\n  onClose: () => void;\n  headerText?: string;\n  headerClass?: string;\n  children: any;\n  className?: string;\n  innerClass?: string;\n  closeOnOverlayClick?: boolean;\n}\n\nconst Modal: React.FC<Props> = ({\n  open,\n  onClose,\n  children,\n  headerText,\n  headerClass,\n  className = '',\n  innerClass = '',\n  closeOnOverlayClick = false,\n}) => {\n  const onBackdropClick = (event: React.SyntheticEvent) => {\n    const isSameElement: boolean = event.target === event.currentTarget;\n    if (isSameElement && closeOnOverlayClick) {\n      onClose();\n    }\n  };\n\n  const classes: string = cn({\n    [className]: true,\n    [styles.modal]: true,\n    [styles.open]: open,\n    [styles.backdrop]: true,\n  });\n\n  return (\n    <>\n      {open && (\n        <div className={classes} onClick={onBackdropClick}>\n          {\n            <div className={styles.inner + (innerClass ? ' ' + innerClass : '')}>\n              {!!headerText && (\n                <div className={styles.header + (headerClass ? ' ' + headerClass : '')}>\n                  <div>{headerText}</div>\n                  <div>\n                    <img\n                      className={styles.closeIcon}\n                      src={iconClose}\n                      alt=\"close-icon\"\n                      onClick={onBackdropClick}\n                    />\n                  </div>{' '}\n                </div>\n              )}\n              {!headerText && (\n                <div className={styles.header + (headerClass ? ' ' + headerClass : '')}>\n                  <div>\n                    <img\n                      className={styles.closeIcon}\n                      src={iconClose}\n                      alt=\"close-icon\"\n                      onClick={onBackdropClick}\n                    />\n                  </div>\n                </div>\n              )}\n              <div className={styles.innerContent}>{children}</div>\n            </div>\n          }\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Modal;\n","import React, { FC } from 'react';\n\ninterface Props extends React.HTMLAttributes<HTMLElement> {\n  placeholder?: string;\n}\n\nconst BlueButton: FC<Props> = (props) => {\n  const { className } = props;\n\n  return <button {...props} className={'button__blue' + (' ' + className || '')} />;\n};\n\nexport default BlueButton;\n","import React, { FC, useState } from 'react';\nimport { Invoice } from '../../../data/types';\nimport View from '../../../components/View';\nimport Text from '../../../components/Text';\nimport EditableTextWrapper from '../EditableTextWrapper';\nimport TextWrap from '../../../components/TextWrap';\nimport NoDataBlockFrom from './NoDataBlockFrom';\nimport Modal from '../../../components/Modal';\nimport EditableInput from '../../../components/EditableInput';\nimport BlueButton from '../../../components/BlueButton';\n\ninterface Props extends React.HTMLAttributes<HTMLElement> {\n  pdfMode?: boolean;\n  isFile?: boolean;\n  handleChange: (newData: object) => void;\n  invoice: Invoice;\n}\n\ninterface IModalFromData {\n  companyName?: string;\n  name?: string;\n  companyPhone?: string;\n  companyMobile?: string;\n  companyEmail?: string;\n  companyWebsite?: string;\n  companyAddress?: string;\n  companyAddress2?: string;\n}\n\nconst BlockFrom: FC<Props> = ({\n  invoice,\n  pdfMode,\n  isFile = false,\n  handleChange,\n  children,\n  className,\n}) => {\n  const [isOpenModal, setIsOpenModal] = useState<boolean>(false);\n\n  const [modalData, setModalData] = useState<IModalFromData>({\n    companyName: invoice.companyName,\n    name: invoice.name,\n    companyPhone: invoice.companyPhone,\n    companyMobile: invoice.companyMobile,\n    companyEmail: invoice.companyEmail,\n    companyWebsite: invoice.companyWebsite,\n    companyAddress: invoice.companyAddress,\n    companyAddress2: invoice.companyAddress2,\n  });\n\n  const modalHandleChange = (name: keyof IModalFromData, value?: string) => {\n    const newModalData = { ...modalData };\n\n    newModalData[name] = value;\n    setModalData(newModalData);\n  };\n  const fromKeys = (\n    [\n      'companyName',\n      'name',\n      'companyPhone',\n      'companyMobile',\n      'companyEmail',\n      'companyWebsite',\n      'companyAddress',\n      'companyAddress2',\n    ] as Array<keyof Invoice>\n  ).filter((el) => !!invoice[el]);\n\n  const _handleChange = () => {\n    handleChange(modalData);\n  };\n  return (\n    <View className=\"w-50\" pdfMode={pdfMode}>\n      <View onClick={() => setIsOpenModal(!isOpenModal)}>\n        <Text className=\"left black title\" pdfMode={pdfMode} isFile={isFile}>\n          {invoice.billFrom}\n        </Text>\n        {fromKeys.length ? (\n          <EditableTextWrapper pdfMode={pdfMode}>\n            <TextWrap\n              pdfMode={pdfMode}\n              isFile={isFile}\n              className=\"sub-title left\"\n              value={invoice.companyName}\n            />\n            <TextWrap pdfMode={pdfMode} isFile={isFile} value={invoice.name} />\n            <TextWrap pdfMode={pdfMode} isFile={isFile} value={invoice.companyPhone} />\n            <TextWrap pdfMode={pdfMode} isFile={isFile} value={invoice.companyMobile} />\n            <TextWrap pdfMode={pdfMode} isFile={isFile} value={invoice.companyEmail} />\n            <TextWrap pdfMode={pdfMode} isFile={isFile} value={invoice.companyWebsite} />\n            <TextWrap pdfMode={pdfMode} isFile={isFile} value={invoice.companyAddress} />\n            <TextWrap pdfMode={pdfMode} isFile={isFile} value={invoice.companyAddress2} />\n          </EditableTextWrapper>\n        ) : (\n          <NoDataBlockFrom pdfMode={pdfMode} />\n        )}\n      </View>\n      {!pdfMode && (\n        <Modal\n          headerText={'From'}\n          closeOnOverlayClick\n          open={isOpenModal}\n          onClose={() => setIsOpenModal(false)}\n        >\n          <div className={'modal__child-wrapper'}>\n            <div className={'mw-50'}>\n              <EditableInput\n                label=\"Business Name\"\n                value={modalData.companyName}\n                onChange={(value) => modalHandleChange('companyName', value)}\n              />\n              <EditableInput\n                label=\"Owner name\"\n                value={modalData.name}\n                onChange={(value) => modalHandleChange('name', value)}\n              />\n            </div>\n            <div className={'mw-50'}>\n              <EditableInput\n                label=\"Phone\"\n                value={modalData.companyPhone}\n                onChange={(value) => modalHandleChange('companyPhone', value)}\n              />\n              <EditableInput\n                label=\"Mobile\"\n                value={modalData.companyMobile}\n                onChange={(value) => modalHandleChange('companyMobile', value)}\n              />\n            </div>\n            <div className={'mw-50'}>\n              <EditableInput\n                label=\"Email\"\n                value={modalData.companyEmail}\n                onChange={(value) => modalHandleChange('companyEmail', value)}\n              />\n              <EditableInput\n                label=\"Website\"\n                value={modalData.companyWebsite}\n                onChange={(value) => modalHandleChange('companyWebsite', value)}\n              />\n            </div>\n            <EditableInput\n              label=\"Address\"\n              value={modalData.companyAddress}\n              onChange={(value) => modalHandleChange('companyAddress', value)}\n            />\n            <EditableInput\n              label=\"Address 2\"\n              value={modalData.companyAddress2}\n              onChange={(value) => modalHandleChange('companyAddress2', value)}\n            />\n\n            <BlueButton\n              className={'mt-40 m-auto'}\n              onClick={() => {\n                _handleChange();\n                setIsOpenModal(false);\n              }}\n            >\n              {fromKeys.length ? 'Edit' : 'Add'} Business Details\n            </BlueButton>\n          </div>\n        </Modal>\n      )}\n    </View>\n  );\n};\n\nexport default BlockFrom;\n","import React, { FC } from 'react';\nimport css from '../styles.module.scss';\nimport iconTo from '../../../images/icon-to.svg';\n\ninterface Props {\n  pdfMode?: boolean;\n}\n\nconst NoDataBlockTo: FC<Props> = ({ pdfMode }) => {\n  return pdfMode ? (\n    <></>\n  ) : (\n    <div className={css.noDataWrapper}>\n      <div>\n        <img src={iconTo} alt=\"icon-to\" />\n      </div>\n      <div className={'flex align-center'}>\n        <div>\n          <div className={css.noDataTitle}>Add Client</div>\n          <div className={'mt-10'}>Who is this invoice to?</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NoDataBlockTo;\n","import React, { FC, useState } from 'react';\nimport { Invoice } from '../../../data/types';\nimport View from '../../../components/View';\nimport Text from '../../../components/Text';\nimport EditableTextWrapper, { DIRECTIONS } from '../EditableTextWrapper';\nimport TextWrap from '../../../components/TextWrap';\nimport NoDataBlockTo from './NoDataBlockTo';\nimport Modal from '../../../components/Modal';\nimport EditableInput from '../../../components/EditableInput';\nimport BlueButton from '../../../components/BlueButton';\nimport PlusIcon from '../../../images/icon-plus.svg';\nimport styles from '../styles.module.scss';\n\ninterface Props extends React.HTMLAttributes<HTMLElement> {\n  pdfMode?: boolean;\n  isFile?: boolean;\n  handleChange: (newData: object) => void;\n  invoice: Invoice;\n}\n\nexport interface IModalToData {\n  clientName?: string;\n  clientMobile?: string;\n  clientPhone?: string;\n  clientEmail?: string;\n  clientAddress?: string;\n  clientAddress2?: string;\n\n  shippingAddress?: string;\n  trackingN?: string;\n}\n\nconst BlockTo: FC<Props> = ({ invoice, pdfMode, isFile, children, className, handleChange }) => {\n  const [isOpenModal, setIsOpenModal] = useState<boolean>(false);\n  const [addShipInfoIsOpen, setAddShipInfoIsOpen] = useState<boolean>(false);\n  const [modalData, setModalData] = useState<IModalToData>({\n    clientName: invoice.clientName,\n    clientMobile: invoice.clientMobile,\n    clientPhone: invoice.clientPhone,\n    clientEmail: invoice.clientEmail,\n    clientAddress: invoice.clientAddress,\n    clientAddress2: invoice.clientAddress2,\n\n    shippingAddress: invoice.shippingAddress,\n    trackingN: invoice.trackingN,\n  });\n\n  const modalHandleChange = (name: keyof IModalToData, value?: string) => {\n    const newModalData = { ...modalData };\n    newModalData[name] = value;\n    setModalData(newModalData);\n  };\n\n  const _handleChange = () => {\n    handleChange(modalData);\n  };\n\n  const toKeys = (\n    [\n      'clientName',\n      'clientMobile',\n      'clientPhone',\n      'clientEmail',\n      'clientAddress',\n      'clientAddress2',\n    ] as Array<keyof Invoice>\n  ).filter((el) => !!invoice[el]);\n\n  const toShipKeys = (['shippingAddress', 'trackingN'] as Array<keyof Invoice>).filter(\n    (el) => !!invoice[el],\n  );\n\n  return (\n    <>\n      <View className=\"w-50\" pdfMode={pdfMode}>\n        {!(!toKeys.length && !!toShipKeys.length) && (\n          <View\n            onClick={() => {\n              setAddShipInfoIsOpen(!!toShipKeys.length);\n\n              setIsOpenModal(!isOpenModal);\n            }}\n          >\n            <Text className=\"right title black\" pdfMode={pdfMode} isFile={isFile}>\n              {invoice.billTo}\n            </Text>\n            {!!toKeys.length ? (\n              <EditableTextWrapper pdfMode={pdfMode} direction={DIRECTIONS.RIGHT}>\n                <TextWrap\n                  pdfMode={pdfMode}\n                  isFile={isFile}\n                  className=\"right sub-title\"\n                  value={invoice.clientName}\n                />\n                <TextWrap\n                  pdfMode={pdfMode}\n                  isFile={isFile}\n                  className=\"right\"\n                  value={invoice.clientMobile}\n                />\n                <TextWrap\n                  pdfMode={pdfMode}\n                  isFile={isFile}\n                  className=\"right\"\n                  value={invoice.clientPhone}\n                />\n                <TextWrap\n                  pdfMode={pdfMode}\n                  isFile={isFile}\n                  className=\"right\"\n                  value={invoice.clientEmail}\n                />\n                <TextWrap\n                  pdfMode={pdfMode}\n                  isFile={isFile}\n                  className=\"right\"\n                  value={invoice.clientAddress}\n                />\n                <TextWrap\n                  pdfMode={pdfMode}\n                  isFile={isFile}\n                  className=\"right\"\n                  value={invoice.clientAddress2}\n                />\n              </EditableTextWrapper>\n            ) : (\n              <NoDataBlockTo pdfMode={pdfMode} />\n            )}\n          </View>\n        )}\n        {!!toShipKeys.length && (\n          // <View className=\"w-50\" pdfMode={pdfMode}>\n          <View\n            onClick={() => {\n              setAddShipInfoIsOpen(!!toShipKeys.length);\n\n              setIsOpenModal(!isOpenModal);\n            }}\n          >\n            <Text\n              className={'right title black' + (!!toKeys.length ? ' mt-20' : '')}\n              pdfMode={pdfMode}\n              isFile={isFile}\n            >\n              {invoice.shipTo}\n            </Text>\n            <EditableTextWrapper pdfMode={pdfMode} direction={DIRECTIONS.RIGHT}>\n              <TextWrap\n                pdfMode={pdfMode}\n                isFile={isFile}\n                className=\"right\"\n                value={invoice.shippingAddress}\n              />\n              <TextWrap\n                pdfMode={pdfMode}\n                isFile={isFile}\n                className=\"right\"\n                value={invoice.trackingN}\n              />\n            </EditableTextWrapper>\n          </View>\n          // </View>\n        )}\n\n        {!pdfMode && (\n          <Modal\n            headerText={'Bill to'}\n            closeOnOverlayClick\n            open={isOpenModal}\n            onClose={() => {\n              setIsOpenModal(false);\n            }}\n          >\n            <div className={'modal__child-wrapper'}>\n              <div className={'mw-50'}>\n                <EditableInput\n                  label=\"Business Name\"\n                  value={modalData.clientName}\n                  onChange={(value) => modalHandleChange('clientName', value)}\n                />{' '}\n                <EditableInput\n                  label=\"Phone\"\n                  value={modalData.clientPhone}\n                  onChange={(value) => modalHandleChange('clientPhone', value)}\n                />\n              </div>\n              <div className={'mw-50'}>\n                <EditableInput\n                  label=\"Mobile\"\n                  value={modalData.clientMobile}\n                  onChange={(value) => modalHandleChange('clientMobile', value)}\n                />\n                <EditableInput\n                  label=\"Email\"\n                  value={modalData.clientEmail}\n                  onChange={(value) => modalHandleChange('clientEmail', value)}\n                />\n              </div>\n\n              <EditableInput\n                label=\"Address 1\"\n                value={modalData.clientAddress}\n                onChange={(value) => modalHandleChange('clientAddress', value)}\n              />\n              <EditableInput\n                label=\"Address 2\"\n                value={modalData.clientAddress2}\n                onChange={(value) => modalHandleChange('clientAddress2', value)}\n              />\n\n              {!addShipInfoIsOpen && (\n                <div\n                  className={styles.addBtnWrapper + ' no-select'}\n                  onClick={() => setAddShipInfoIsOpen(true)}\n                >\n                  <img src={PlusIcon} alt=\"plus icon\" />\n                  <div className={styles.addBtnWrapperText}> Add shipping information</div>\n                </div>\n              )}\n              {addShipInfoIsOpen && (\n                <>\n                  <EditableInput\n                    label=\"Shipping address\"\n                    value={modalData.shippingAddress}\n                    onChange={(value) => modalHandleChange('shippingAddress', value)}\n                  />\n                  <div className={'mw-50'}>\n                    <EditableInput\n                      label=\"Tracking #\"\n                      value={modalData.trackingN}\n                      onChange={(value) => modalHandleChange('trackingN', value)}\n                    />\n                  </div>\n                </>\n              )}\n\n              <BlueButton\n                className={'mt-20 m-auto'}\n                onClick={() => {\n                  _handleChange();\n                  setIsOpenModal(false);\n                }}\n              >\n                {toKeys.length || toShipKeys.length ? 'Edit' : 'Add'} Client\n              </BlueButton>\n            </div>\n          </Modal>\n        )}\n      </View>\n    </>\n  );\n};\n\nexport default BlockTo;\n","import React, { FC } from 'react';\nimport css from '../styles.module.scss';\nimport iconPay from '../../../images/icon-pay.svg';\nimport classNames from 'classnames';\n\ninterface Props {\n  pdfMode?: boolean;\n}\n\nconst NoDataBlockPayment: FC<Props> = ({ pdfMode }) => {\n  return pdfMode ? (\n    <></>\n  ) : (\n    <div\n      className={classNames(\n        css.noDataWrapper,\n        css.payBlock,\n        'flex align-center flex-col justify-center',\n      )}\n    >\n      <div>\n        <img src={iconPay} alt=\"icon-pay\" />\n      </div>\n      <div className={css.noDataTitle}>Add Payment Options</div>\n    </div>\n  );\n};\n\nexport default NoDataBlockPayment;\n","import React, { FC, useState } from 'react';\nimport { Invoice } from '../../../data/types';\nimport Text from '../../../components/Text';\nimport EditableTextWrapper from '../EditableTextWrapper';\nimport TextWrap from '../../../components/TextWrap';\nimport NoDataBlockPayment from './NoDataBlockPayment';\nimport Modal from '../../../components/Modal';\nimport Label from '../../../components/Label';\nimport View from '../../../components/View';\nimport EditableInput from '../../../components/EditableInput';\nimport BlueButton from '../../../components/BlueButton';\nimport EditableTextarea from '../../../components/EditableTextarea';\n\ninterface Props {\n  pdfMode?: boolean;\n  isFile?: boolean;\n  handleChange: (newData: object) => void;\n  invoice: Invoice;\n}\ninterface IModalPayData {\n  payEmail?: string;\n  payPayableTo?: string;\n  payBankTransfer?: string;\n  payOther?: string;\n}\n\nconst BlockPayment: FC<Props> = ({ invoice, pdfMode, isFile, handleChange }) => {\n  const [isOpenModal, setIsOpenModal] = useState<boolean>(false);\n\n  const [modalData, setModalData] = useState<IModalPayData>({\n    payEmail: invoice.payEmail,\n    payPayableTo: invoice.payPayableTo,\n    payBankTransfer: invoice.payBankTransfer,\n    payOther: invoice.payOther,\n  });\n\n  const modalHandleChange = (name: keyof IModalPayData, value?: string) => {\n    const newModalData = { ...modalData };\n\n    newModalData[name] = value;\n    setModalData(newModalData);\n  };\n\n  const _handleChange = () => {\n    handleChange(modalData);\n  };\n\n  const payKeys = (\n    ['payEmail', 'payPayableTo', 'payBankTransfer', 'payOther'] as Array<keyof Invoice>\n  ).filter((el) => !!invoice[el]);\n  return !payKeys.length && pdfMode ? (\n    <></>\n  ) : (\n    <View style={{ maxWidth: '300px' }}>\n      <View onClick={() => setIsOpenModal(!isOpenModal)}>\n        <Text className=\"black title\" pdfMode={pdfMode} isFile={isFile}>\n          {invoice.paymentLabel}\n        </Text>\n        {payKeys.length ? (\n          <EditableTextWrapper pdfMode={pdfMode}>\n            <View className={'mb-0__last-child'}>\n              {!!invoice.payEmail && (\n                <View className={'mb-21'}>\n                  <TextWrap pdfMode={pdfMode} isFile={isFile} value={'Paypal email'} />\n                  <TextWrap pdfMode={pdfMode} isFile={isFile} value={invoice.payEmail || ''} />\n                </View>\n              )}\n              {!!invoice.payPayableTo && (\n                <View className={'mb-21'}>\n                  <TextWrap pdfMode={pdfMode} isFile={isFile} value={'Make checks payable to'} />\n                  <TextWrap pdfMode={pdfMode} isFile={isFile} value={invoice.payPayableTo || ''} />\n                </View>\n              )}\n              {!!invoice.payBankTransfer && (\n                <View className={'mb-21'}>\n                  <TextWrap pdfMode={pdfMode} isFile={isFile} value={'Bank transfer'} />\n                  <TextWrap pdfMode={pdfMode} isFile={isFile} value={invoice.payBankTransfer} />\n                </View>\n              )}\n              {!!invoice.payOther && (\n                <View>\n                  <TextWrap pdfMode={pdfMode} isFile={isFile} value={'Other'} />\n                  <TextWrap pdfMode={pdfMode} isFile={isFile} value={invoice.payOther} />\n                </View>\n              )}\n            </View>\n          </EditableTextWrapper>\n        ) : (\n          <View>\n            <NoDataBlockPayment pdfMode={pdfMode} />\n          </View>\n        )}\n      </View>\n      {!pdfMode && (\n        <Modal\n          headerText={'Payment instruction'}\n          closeOnOverlayClick\n          open={isOpenModal}\n          onClose={() => setIsOpenModal(false)}\n        >\n          <View className={'modal__child-wrapper'}>\n            <View className={'mw-50'}>\n              <EditableInput\n                label=\"Paypal email\"\n                value={modalData.payEmail}\n                onChange={(value) => modalHandleChange('payEmail', value)}\n              />\n              <EditableInput\n                label=\"Make checks payable to\"\n                value={modalData.payPayableTo}\n                onChange={(value) => modalHandleChange('payPayableTo', value)}\n              />\n            </View>\n            <View className={'mw-50'}>\n              <View>\n                <Label>Bank transfer</Label>\n                <EditableTextarea\n                  className=\"w-100\"\n                  rows={2}\n                  value={modalData.payBankTransfer}\n                  onChange={(value) => modalHandleChange('payBankTransfer', value)}\n                />\n              </View>\n              <View>\n                <Label>Bank Other</Label>\n                <EditableTextarea\n                  className=\"w-100\"\n                  rows={2}\n                  value={modalData.payOther}\n                  onChange={(value) => modalHandleChange('payOther', value)}\n                />\n              </View>\n            </View>\n\n            <BlueButton\n              className={'mt-40 m-auto'}\n              onClick={() => {\n                _handleChange();\n                setIsOpenModal(false);\n              }}\n            >\n              {payKeys.length ? 'Edit' : 'Add'} Payment instruction\n            </BlueButton>\n          </View>\n        </Modal>\n      )}\n    </View>\n  );\n};\n\nexport default BlockPayment;\n","import React, { FC } from 'react';\nimport { Text } from '@react-pdf/renderer';\nimport compose from '../styles/compose';\nimport ReactSelect, {\n  SelectedOption,\n  SelectedOptionValue,\n  SelectSearchOption,\n  SelectSearchProps,\n} from 'react-select-search';\n\ninterface Props {\n  className?: string;\n  options: SelectSearchOption[];\n  placeholder?: string;\n  value?: string;\n  onChange?: (\n    selectedValue: SelectedOptionValue | SelectedOptionValue[],\n    selectedOption: SelectedOption | SelectedOption[],\n    optionSnapshot: SelectSearchProps,\n  ) => void;\n  pdfMode?: boolean;\n  isFile?: boolean;\n}\n\nconst EditableSelect: FC<Props> = ({\n  className,\n  options,\n  placeholder,\n  value,\n  onChange,\n  pdfMode,\n  isFile,\n}) => {\n  return (\n    <>\n      {pdfMode ? (\n        <Text style={compose('span ' + (className ? className : ''), isFile)}>{value}</Text>\n      ) : (\n        <ReactSelect\n          closeOnSelect={true}\n          id=\"test-id\"\n          options={options}\n          placeholder={placeholder}\n          onChange={onChange}\n          printOptions=\"auto\"\n          search={true}\n        />\n      )}\n    </>\n  );\n};\n\nexport default EditableSelect;\n","import React, { FC, useState, useEffect } from 'react';\nimport { Invoice, ProductLine } from '../../data/types';\nimport { CURRENCIES, initialProductLine } from '../../data/initialData';\nimport EditableInput from '../../components/EditableInput';\nimport EditableTextarea from '../../components/EditableTextarea';\nimport EditableCalendarInput from '../../components/EditableCalendarInput';\nimport EditableFileImage from '../../components/EditableFileImage';\nimport Document from '../../components/Document';\nimport logoPlaceholder from '../../images/logo-placeholder.svg';\nimport Page from '../../components/Page';\nimport View from '../../components/View';\nimport Text from '../../components/Text';\nimport Label from '../../components/Label';\nimport { Font } from '@react-pdf/renderer';\nimport format from 'date-fns/format';\nimport BlockFrom from './BlockFrom/BlockFrom';\nimport BlockTo from './BlockTo/BlockTo';\nimport BlockPayment from './BlockPayment/BlockPayment';\nimport EditableSelect from '../../components/EditableSelect';\nimport helpers from '../../scripts/helpers';\nimport css from './styles.module.scss';\n// @ts-ignore\nimport GraphikRegular from '../../fonts/GraphikRegular.otf';\n// @ts-ignore\nimport GraphikMedium from '../../fonts/GraphikMedium.otf';\n// @ts-ignore\nimport GraphikSemibold from '../../fonts/GraphikSemibold.otf';\n// @ts-ignore\nimport GraphikBold from '../../fonts/GraphikBold.otf';\n\nFont.register({\n  family: 'Graphik',\n  fonts: [\n    { src: GraphikRegular },\n    { src: GraphikMedium, fontWeight: 500 },\n    { src: GraphikSemibold, fontWeight: 600 },\n    { src: GraphikBold, fontWeight: 700 },\n  ],\n});\n\ninterface Props {\n  invoice: Invoice;\n  pdfMode?: boolean;\n  isFile?: boolean;\n  setInvoice?: (invoice: Invoice) => void;\n}\n\nconst InvoicePage: FC<Props> = ({ invoice, pdfMode = false, isFile, setInvoice }) => {\n  const [subTotal, setSubTotal] = useState<number>();\n  const [saleTax, setSaleTax] = useState<number>();\n  const [totalAmount, setTotalAmount] = useState<number>();\n  const [discountErr, setDiscountErr] = useState<boolean>(false);\n\n  const isAmountPaid = !!helpers.getNumFromLocale(invoice.amountPaid);\n  const dateFormat = 'MMM dd, yyyy';\n  const invoiceDate = invoice.invoiceDate !== '' ? new Date(invoice.invoiceDate) : new Date();\n  const invoiceDueDate =\n    invoice.invoiceDueDate !== ''\n      ? new Date(invoice.invoiceDueDate)\n      : new Date(invoiceDate.valueOf());\n\n  if (invoice.invoiceDueDate === '') {\n    invoiceDueDate.setDate(invoiceDueDate.getDate() + 30);\n  }\n\n  const balanceDueSum = (totalAmount || 0) - helpers.getNumFromLocale(invoice.amountPaid) || 0;\n\n  const calculateAmount = (quantity: string, rate: string) => {\n    const quantityNumber = helpers.getNumFromLocale(quantity);\n    const rateNumber = helpers.getNumFromLocale(rate);\n    const amount = quantityNumber && rateNumber ? quantityNumber * rateNumber : 0;\n\n    return amount.toFixed(2);\n  };\n\n  const calculateTotal = ({\n    subTotal = 0,\n    discountAmount = 0,\n    shippingCostAmount = 0,\n    taxAmount = 0,\n  }) => {\n    const _totalAmount = subTotal - discountAmount + shippingCostAmount + taxAmount;\n\n    setTotalAmount(_totalAmount);\n    setDiscountErr(subTotal < discountAmount);\n\n    return _totalAmount;\n  };\n\n  const handleChange = (name: keyof Invoice, value: string | number) => {\n    if (name !== 'productLines') {\n      const newInvoice: any = { ...invoice };\n      let tempVal = value;\n\n      if (\n        name === 'discountPercentage' ||\n        name === 'discountAmount' ||\n        name === 'shippingCostAmount'\n      ) {\n        if (name === 'discountPercentage') {\n          tempVal = Number(value < 0 ? '0' : value > 100 ? '100' : value).toFixed(2);\n          newInvoice['discountAmount'] = Number(\n            (subTotal || 0) * ((helpers.getNumFromLocale(tempVal || '0') || 0) / 100),\n          ).toFixed(2);\n          newInvoice['discountPercentage'] = tempVal;\n        } else if (name === 'discountAmount') {\n          tempVal = Number(value).toFixed(2);\n          newInvoice['discountPercentage'] = Number(\n            subTotal\n              ? ((helpers.getNumFromLocale(value || '0') || 0) / (subTotal || 0)) * 100\n              : '0',\n          ).toFixed(2);\n          newInvoice['discountAmount'] = tempVal;\n        } else if (name === 'shippingCostAmount') {\n          newInvoice[name] = tempVal;\n        }\n\n        calculateTotal({\n          subTotal: subTotal,\n          discountAmount: helpers.getNumFromLocale(newInvoice['discountAmount']),\n          shippingCostAmount: helpers.getNumFromLocale(\n            name === 'shippingCostAmount' ? value : invoice.shippingCostAmount,\n          ),\n          taxAmount: saleTax,\n        });\n      } else {\n        newInvoice[name] = tempVal;\n      }\n\n      if (setInvoice) {\n        setInvoice(newInvoice);\n      }\n    }\n  };\n\n  const handleTotalChange = (newData: object) => {\n    const newInvoice = { ...invoice, ...newData };\n\n    if (setInvoice) {\n      setInvoice(newInvoice);\n    }\n  };\n\n  const handleProductLineChange = (\n    index: number,\n    name: keyof ProductLine,\n    value: string,\n    integer: boolean = false,\n  ) => {\n    const productLines = invoice.productLines.map((productLine, i) => {\n      if (i === index) {\n        const newProductLine = { ...productLine };\n\n        // if (name === 'description' || name === 'title') {\n        newProductLine[name] = value;\n        // } else {\n        // const n = integer ? String(helpers.getInt(value)) : helpers.parseLocaleNumber(value);\n        // const n = value;\n        // newProductLine[name] = n;\n        // }\n\n        return newProductLine;\n      }\n\n      return { ...productLine };\n    });\n\n    if (setInvoice) {\n      setInvoice({ ...invoice, productLines });\n    }\n  };\n\n  const handleRemove = (i: number) => {\n    const productLines = invoice.productLines.filter((productLine, index) => index !== i);\n\n    if (setInvoice) {\n      setInvoice({ ...invoice, productLines });\n    }\n  };\n\n  const handleAdd = () => {\n    const productLines = [...invoice.productLines, { ...initialProductLine }];\n\n    if (setInvoice) {\n      setInvoice({ ...invoice, productLines });\n    }\n  };\n\n  useEffect(() => {\n    let subTotal = 0;\n    let saleTax = 0;\n\n    invoice.productLines.forEach((productLine) => {\n      const quantityNumber = helpers.getNumFromLocale(productLine.quantity);\n      const rateNumber = helpers.getNumFromLocale(productLine.rate);\n      const taxRate = helpers.getInt(productLine.tax) / 100;\n      const amount = quantityNumber && rateNumber ? quantityNumber * rateNumber : 0;\n\n      subTotal += amount;\n      saleTax += taxRate ? amount * taxRate : 0;\n    });\n\n    setSubTotal(subTotal);\n    setSaleTax(saleTax);\n    calculateTotal({\n      subTotal: subTotal,\n      discountAmount: helpers.getNumFromLocale(invoice.discountAmount),\n      shippingCostAmount: helpers.getNumFromLocale(invoice.shippingCostAmount),\n      taxAmount: saleTax,\n    });\n  }, [invoice.productLines]);\n\n  return (\n    <>\n      <Document pdfMode={pdfMode}>\n        <Page className=\"invoice-wrapper\" pdfMode={pdfMode}>\n          <View isFile={isFile} className=\"flex justify-space-between\" pdfMode={pdfMode}>\n            <View isFile={isFile} className=\"w-50\" pdfMode={pdfMode}>\n              <EditableFileImage\n                className=\"logo\"\n                placeholder={\n                  <div>\n                    <img src={logoPlaceholder} alt=\"\" />\n                    <p>Add Logo</p>\n                  </div>\n                }\n                value={invoice.logo}\n                width={100}\n                pdfMode={pdfMode}\n                isFile={isFile}\n                onChangeImage={(value) => handleChange('logo', value)}\n                // onChangeWidth={(value) => handleChange('logoWidth', value)}\n              />\n            </View>\n            <View isFile={isFile} className={pdfMode ? 'w-40' : 'w-50'} pdfMode={pdfMode}>\n              <View isFile={isFile} className=\"mb-5\" pdfMode={pdfMode}>\n                <EditableInput\n                  className=\"right document-type mb-26\"\n                  placeholder=\"Invoice\"\n                  isFile={isFile}\n                  value={invoice.documentType}\n                  onChange={(value) => handleChange('documentType', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View isFile={isFile} className=\"flex align-center mb-5\" pdfMode={pdfMode}>\n                <View isFile={isFile} className=\"w-40\" pdfMode={pdfMode}>\n                  <Label isFile={isFile} className={'feature'}>\n                    {invoice.invoiceTitleLabel}\n                  </Label>\n                </View>\n                <View isFile={isFile} className=\"w-60\" pdfMode={pdfMode}>\n                  <EditableInput\n                    className=\"right\"\n                    isFile={isFile}\n                    placeholder=\"INV-000\"\n                    value={invoice.invoiceTitle}\n                    onChange={(value) => handleChange('invoiceTitle', value)}\n                    pdfMode={pdfMode}\n                  />\n                </View>\n              </View>\n              <View isFile={isFile} className=\"flex align-center mb-5\" pdfMode={pdfMode}>\n                <View isFile={isFile} className=\"w-40\" pdfMode={pdfMode}>\n                  <Label isFile={isFile} className={'feature'}>\n                    {invoice.invoiceDateLabel}\n                  </Label>\n                </View>\n                <View isFile={isFile} className=\"w-60\" pdfMode={pdfMode}>\n                  <EditableCalendarInput\n                    className=\"right\"\n                    isFile={isFile}\n                    value={format(invoiceDate, dateFormat)}\n                    selected={invoiceDate}\n                    onChange={(date) =>\n                      handleChange(\n                        'invoiceDate',\n                        date && !Array.isArray(date) ? format(date, dateFormat) : '',\n                      )\n                    }\n                    pdfMode={pdfMode}\n                  />\n                </View>\n              </View>\n              <View isFile={isFile} className=\"flex align-center mb-5\" pdfMode={pdfMode}>\n                <View isFile={isFile} className=\"w-40\" pdfMode={pdfMode}>\n                  <Label isFile={isFile} className={'feature'}>\n                    {invoice.invoiceDueDateLabel}\n                  </Label>\n                </View>\n                <View isFile={isFile} className=\"w-60\" pdfMode={pdfMode}>\n                  <EditableCalendarInput\n                    className=\"right\"\n                    isFile={isFile}\n                    value={format(invoiceDueDate, dateFormat)}\n                    selected={invoiceDueDate}\n                    onChange={(date) =>\n                      handleChange(\n                        'invoiceDueDate',\n                        date && !Array.isArray(date) ? format(date, dateFormat) : '',\n                      )\n                    }\n                    pdfMode={pdfMode}\n                  />\n                </View>\n              </View>\n            </View>\n          </View>\n\n          <View isFile={isFile} className=\"flex gap-30 mt-40\" pdfMode={pdfMode}>\n            <BlockFrom\n              isFile={isFile}\n              invoice={invoice}\n              pdfMode={pdfMode}\n              handleChange={handleTotalChange}\n            />\n            <BlockTo\n              isFile={isFile}\n              invoice={invoice}\n              pdfMode={pdfMode}\n              handleChange={handleTotalChange}\n            />\n          </View>\n\n          <View isFile={isFile} className=\"mt-30 bg-dark flex mb-5 fs-13\" pdfMode={pdfMode}>\n            <View isFile={isFile} className=\"w-38 p-4-13\" pdfMode={pdfMode}>\n              <Text isFile={isFile} className=\"left light-bold white\" pdfMode={pdfMode}>\n                {invoice.productLineDescription}\n              </Text>\n            </View>\n            <View isFile={isFile} className=\"w-17 p-4-13\" pdfMode={pdfMode}>\n              <Text isFile={isFile} className=\"right light-bold white\" pdfMode={pdfMode}>\n                {invoice.productLineQuantityRate + ', ' + invoice.currency}\n              </Text>\n            </View>\n            <View isFile={isFile} className=\"w-17 p-4-13\" pdfMode={pdfMode}>\n              <Text isFile={isFile} className=\"right light-bold white\" pdfMode={pdfMode}>\n                {invoice.productLineQuantity}\n              </Text>\n            </View>\n            <View isFile={isFile} className=\"w-17 p-4-13\" pdfMode={pdfMode}>\n              <Text isFile={isFile} className=\"right light-bold white\" pdfMode={pdfMode}>\n                {invoice.productLineTax}\n              </Text>\n            </View>\n            <View isFile={isFile} className=\"w-18 p-4-13\" pdfMode={pdfMode}>\n              <Text isFile={isFile} className=\"right light-bold white\" pdfMode={pdfMode}>\n                {invoice.productLineQuantityAmount + ', ' + invoice.currency}\n              </Text>\n            </View>\n          </View>\n\n          {invoice.productLines.map((productLine, i) => {\n            return pdfMode && productLine.title === '' ? (\n              <Text isFile={isFile} key={i}></Text>\n            ) : (\n              <View isFile={isFile} key={i} className=\"row flex\" pdfMode={pdfMode}>\n                <View isFile={isFile} className=\"w-38 p-4-13 pb-10\" pdfMode={pdfMode}>\n                  <View isFile={isFile} className=\"mb-5\">\n                    <EditableInput\n                      className={'word-break'}\n                      isFile={isFile}\n                      value={productLine.title}\n                      placeholder=\"Title\"\n                      onChange={(value) => handleProductLineChange(i, 'title', value)}\n                      pdfMode={pdfMode}\n                    />\n                  </View>\n\n                  <EditableTextarea\n                    className=\"dark\"\n                    isFile={isFile}\n                    rows={2}\n                    placeholder=\"Additional details\"\n                    value={productLine.description}\n                    onChange={(value) => handleProductLineChange(i, 'description', value)}\n                    pdfMode={pdfMode}\n                  />\n                </View>\n                <View isFile={isFile} className=\"w-17 p-4-13 pb-10\" pdfMode={pdfMode}>\n                  <EditableInput\n                    className=\" right\"\n                    isFile={isFile}\n                    value={productLine.rate}\n                    type={'number'}\n                    onChange={(value) => handleProductLineChange(i, 'rate', value)}\n                    pdfMode={pdfMode}\n                  />\n                </View>\n                <View isFile={isFile} className=\"w-17 p-4-13 pb-10\" pdfMode={pdfMode}>\n                  <EditableInput\n                    className=\" right\"\n                    isFile={isFile}\n                    value={productLine.quantity}\n                    type={'integer'}\n                    onChange={(value) => handleProductLineChange(i, 'quantity', value, true)}\n                    pdfMode={pdfMode}\n                  />\n                </View>\n                <View isFile={isFile} className=\"w-17 p-4-13 pb-10\" pdfMode={pdfMode}>\n                  <EditableInput\n                    className=\" right\"\n                    isFile={isFile}\n                    value={productLine.tax}\n                    suffix={'%'}\n                    type={'integer'}\n                    onChange={(value) => handleProductLineChange(i, 'tax', value, true)}\n                    pdfMode={pdfMode}\n                  />\n                </View>\n                <View isFile={isFile} className=\"w-18 p-4-13 pb-10\" pdfMode={pdfMode}>\n                  <Text isFile={isFile} className=\" right\" pdfMode={pdfMode}>\n                    {helpers.parseLocaleNumber(\n                      calculateAmount(productLine.quantity, productLine.rate),\n                    )}\n                  </Text>\n                </View>\n                {!pdfMode && (\n                  <button\n                    className=\"link row__remove\"\n                    aria-label=\"Remove Row\"\n                    title=\"Remove Row\"\n                    onClick={() => handleRemove(i)}\n                  >\n                    <span className=\"icon icon-remove\"></span>\n                  </button>\n                )}\n              </View>\n            );\n          })}\n\n          <View isFile={isFile} className=\"w-100 p-4-13 center\" pdfMode={pdfMode}>\n            {!pdfMode && (\n              <button className=\"add w-100\" onClick={handleAdd}>\n                Add New Invoice Item\n              </button>\n            )}\n          </View>\n          <View isFile={isFile} className=\"flex mt-50  justify-space-between\" pdfMode={pdfMode}>\n            <View isFile={isFile} className=\"w-50\" pdfMode={pdfMode}>\n              <BlockPayment\n                isFile={isFile}\n                invoice={invoice}\n                pdfMode={pdfMode}\n                handleChange={handleTotalChange}\n              />\n            </View>\n            <View isFile={isFile} className={pdfMode ? 'w-40' : 'w-50'} pdfMode={pdfMode}>\n              <View isFile={isFile} className=\"flex justify-space-between\" pdfMode={pdfMode}>\n                <View isFile={isFile} className=\"w-50 p-5\" pdfMode={pdfMode}>\n                  <Text isFile={isFile} className=\"left light-bold fs-15\" pdfMode={pdfMode}>\n                    {invoice.subTotalLabel}\n                  </Text>\n                </View>\n                <View isFile={isFile} className=\"w-50 p-5\" pdfMode={pdfMode}>\n                  <Text isFile={isFile} className=\"right light-bold dark\" pdfMode={pdfMode}>\n                    {invoice.currency + ' ' + helpers.parseLocaleNumber(subTotal)}\n                  </Text>\n                </View>\n              </View>\n              <View isFile={isFile} className=\"flex\" pdfMode={pdfMode}>\n                <View isFile={isFile} className=\"w-50 p-5 flex\" pdfMode={pdfMode}>\n                  <Text isFile={isFile} pdfMode={pdfMode}>\n                    {invoice.discountLabel}\n                  </Text>\n                  <EditableInput\n                    className={`right ${invoice.discountPercentage ? '' : 'color-gray-text'}`}\n                    isFile={isFile}\n                    value={String(invoice.discountPercentage)}\n                    onChange={(value) => {\n                      handleChange('discountPercentage', value);\n                    }}\n                    pdfMode={pdfMode}\n                    type={'number'}\n                    suffix={'%'}\n                  />\n                </View>\n                <View isFile={isFile} className=\"w-50 p-5\" pdfMode={pdfMode}>\n                  <EditableInput\n                    className={`right ${\n                      helpers.getNumFromLocale(invoice.discountAmount) ? '' : 'color-gray-text'\n                    }`}\n                    isFile={isFile}\n                    prefix={invoice.currency + ' '}\n                    type={'number'}\n                    // value={helpers.parseLocaleNumber(invoice.discountAmount)}\n                    value={invoice.discountAmount}\n                    onChange={(value) => {\n                      handleChange('discountAmount', value);\n                    }}\n                    pdfMode={pdfMode}\n                  />\n                </View>\n              </View>\n              {discountErr && (\n                <View isFile={isFile} className={'color-red ' + css.discountErr}>\n                  Discount amount can't be more then subtotal amount\n                </View>\n              )}\n              <View isFile={isFile} className=\"flex\" pdfMode={pdfMode}>\n                <View isFile={isFile} className=\"w-50 p-5\" pdfMode={pdfMode}>\n                  <Text isFile={isFile} pdfMode={pdfMode}>\n                    {invoice.shippingCostLabel}\n                  </Text>\n                </View>\n                <View isFile={isFile} className=\"w-50 p-5\" pdfMode={pdfMode}>\n                  <EditableInput\n                    className={`right ${\n                      helpers.getNumFromLocale(invoice.shippingCostAmount) ? '' : 'color-gray-text'\n                    }`}\n                    isFile={isFile}\n                    type={'number'}\n                    prefix={invoice.currency + ' '}\n                    // value={helpers.parseLocaleNumber(invoice.shippingCostAmount)}\n                    value={invoice.shippingCostAmount}\n                    onChange={(value) => handleChange('shippingCostAmount', value)}\n                    pdfMode={pdfMode}\n                  />\n                </View>\n              </View>\n              <View isFile={isFile} className=\"flex\" pdfMode={pdfMode}>\n                <View isFile={isFile} className=\"w-50 p-5\" pdfMode={pdfMode}>\n                  <EditableInput\n                    value={invoice.taxLabel}\n                    isFile={isFile}\n                    onChange={(value) => handleChange('taxLabel', value)}\n                    pdfMode={pdfMode}\n                  />\n                </View>\n                <View isFile={isFile} className=\"w-50 p-5\" pdfMode={pdfMode}>\n                  <Text\n                    isFile={isFile}\n                    className={`right ${saleTax ? '' : 'color-gray-text'}`}\n                    pdfMode={pdfMode}\n                  >\n                    {invoice.currency + ' ' + helpers.parseLocaleNumber(saleTax)}\n                  </Text>\n                </View>\n              </View>\n              {pdfMode && isAmountPaid && (\n                <View isFile={isFile} className=\"flex\" pdfMode={pdfMode}>\n                  <View isFile={isFile} className=\"w-50 p-5\" pdfMode={pdfMode}>\n                    <Text isFile={isFile} className=\"left semi-bold total-label\" pdfMode={pdfMode}>\n                      {invoice.totalLabel}\n                    </Text>\n                  </View>\n                  <View isFile={isFile} className=\"w-50 p-5\" pdfMode={pdfMode}>\n                    <Text isFile={isFile} className={`right semi-bold`} pdfMode={pdfMode}>\n                      {invoice.currency + ' ' + helpers.parseLocaleNumber(totalAmount)}\n                    </Text>\n                  </View>\n                </View>\n              )}\n              {(!pdfMode || (pdfMode && isAmountPaid)) && (\n                <View isFile={isFile} className=\"flex\" pdfMode={pdfMode}>\n                  <View isFile={isFile} className=\"w-50 p-5\" pdfMode={pdfMode}>\n                    <Text isFile={isFile} className=\"left total-label\" pdfMode={pdfMode}>\n                      {invoice.amountPaidLabel}\n                    </Text>\n                  </View>\n                  <View isFile={isFile} className=\"w-50 p-5\" pdfMode={pdfMode}>\n                    <EditableInput\n                      className={`right ${isAmountPaid ? '' : 'color-gray-text'}`}\n                      isFile={isFile}\n                      value={invoice.amountPaid}\n                      type={'number'}\n                      prefix={invoice.currency + ' '}\n                      onChange={(value) => handleChange('amountPaid', value)}\n                      pdfMode={pdfMode}\n                    />\n                  </View>\n                </View>\n              )}\n\n              {(!pdfMode || (pdfMode && !isAmountPaid)) && (\n                <View\n                  isFile={isFile}\n                  className=\"flex bg-gray h-50 justify-space-between\"\n                  pdfMode={pdfMode}\n                >\n                  <View isFile={isFile} className=\"w-50 p-5 flex  align-center\" pdfMode={pdfMode}>\n                    <View isFile={isFile} className={'flex'} pdfMode={pdfMode}>\n                      <Text\n                        isFile={isFile}\n                        className=\"left semi-bold total-label\"\n                        pdfMode={pdfMode}\n                      >\n                        {invoice.totalLabel}\n                      </Text>\n                      {!pdfMode && (\n                        <EditableSelect\n                          isFile={isFile}\n                          value={invoice.currency}\n                          options={(Object.keys(CURRENCIES) as Array<string>).map((el) => {\n                            return { value: el, name: el };\n                          })}\n                          onChange={(selectedValue) => {\n                            //   @ts-ignore\n                            handleChange('currency', selectedValue);\n                          }}\n                        />\n                      )}\n                    </View>\n                  </View>\n                  <View isFile={isFile} className=\"flex align-center no-wrap\" pdfMode={pdfMode}>\n                    <Text isFile={isFile} className=\"right semi-bold\" pdfMode={pdfMode}>\n                      {invoice.currency + ' ' + helpers.parseLocaleNumber(totalAmount || 0)}\n                    </Text>\n                  </View>\n                </View>\n              )}\n              {isAmountPaid && pdfMode && (\n                <View\n                  isFile={isFile}\n                  className=\"flex bg-gray justify-space-between\"\n                  pdfMode={pdfMode}\n                >\n                  <View isFile={isFile} className=\"w-50 p-5\" pdfMode={pdfMode}>\n                    <View isFile={isFile} className={'flex'}>\n                      <Text\n                        isFile={isFile}\n                        className=\"left semi-bold total-label\"\n                        pdfMode={pdfMode}\n                      >\n                        {invoice.balanceLabel}\n                      </Text>\n                      {!pdfMode && (\n                        <EditableSelect\n                          isFile={isFile}\n                          value={invoice.currency}\n                          options={(Object.keys(CURRENCIES) as Array<string>).map((el) => {\n                            return { value: el, name: el };\n                          })}\n                          onChange={(selectedValue) => {\n                            //   @ts-ignore\n                            handleChange('currency', selectedValue);\n                          }}\n                        />\n                      )}\n                    </View>\n                  </View>\n                  <View isFile={isFile} className=\"flex align-center no-wrap\" pdfMode={pdfMode}>\n                    <Text isFile={isFile} className=\"right semi-bold\" pdfMode={pdfMode}>\n                      {invoice.currency + ' ' + balanceDueSum}\n                    </Text>\n                  </View>\n                </View>\n              )}\n            </View>\n          </View>\n\n          {((invoice.notes && pdfMode) || !pdfMode) && (\n            <View isFile={isFile} className=\"mt-20 w-50\" pdfMode={pdfMode}>\n              <Text isFile={isFile} className=\"bold title\" pdfMode={pdfMode}>\n                {invoice.notesLabel}\n              </Text>\n              <EditableTextarea\n                isFile={isFile}\n                placeholder=\"Additional details\"\n                className=\"w-100\"\n                rows={2}\n                value={invoice.notes}\n                onChange={(value) => handleChange('notes', value)}\n                pdfMode={pdfMode}\n              />\n            </View>\n          )}\n        </Page>\n      </Document>\n    </>\n  );\n};\n\nexport default InvoicePage;\n","import React, { FC, useEffect, useState } from 'react';\nimport { PDFDownloadLink } from '@react-pdf/renderer';\nimport { Invoice } from '../data/types';\nimport InvoicePage from '../pages/InvoicePage/InvoicePage';\nimport sendImage from '../images/icon_send.svg';\nimport send2Image from '../images/icon_send_2.svg';\nimport downloadImage from '../images/icon_download.svg';\nimport previewImage from '../images/icon_preview.svg';\n\ninterface Props {\n  data: Invoice;\n  updatePdfMode?: () => void;\n}\n\nconst Download: FC<Props> = ({ data, updatePdfMode }) => {\n  const [show, setShow] = useState<boolean>(false);\n\n  useEffect(() => {\n    setShow(false);\n\n    const timeout = setTimeout(() => {\n      setShow(true);\n    }, 500);\n\n    return () => clearTimeout(timeout);\n  }, [data]);\n\n  return (\n    <div className={'pdf-btns-wrapp ' + (!show ? 'loading' : '')}>\n      <div className={'btn'} title=\"Send2 PDF\">\n        <img src={send2Image} alt=\"send-2-image\" />\n      </div>\n      <div className={'btn'} title=\"Send PDF\">\n        <img src={sendImage} alt=\"send-image\" />\n      </div>\n      <div className={'btn'} title=\"Save PDF\">\n        <img src={downloadImage} alt=\"save-image\" />\n        {show && (\n          <PDFDownloadLink\n            document={<InvoicePage pdfMode={true} isFile={true} invoice={data} />}\n            fileName={`${data.invoiceTitle ? data.invoiceTitle.toLowerCase() : 'invoice'}.pdf`}\n            aria-label=\"Save PDF\"\n          />\n        )}\n      </div>\n      <div className={'btn'} title=\"Preview PDF\" onClick={updatePdfMode}>\n        <img src={previewImage} alt=\"preview-image\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Download;\n","import React, { useState } from 'react';\nimport InvoicePage from './pages/InvoicePage/InvoicePage';\nimport { Invoice } from './data/types';\nimport { initialInvoice } from './data/initialData';\nimport DownloadPDF from './components/DownloadPDF';\nimport Modal from './components/Modal';\n\nfunction App() {\n  const [invoice, setInvoice] = useState<Invoice>({ ...initialInvoice });\n  const [pdfMode, setPdfMode] = useState<boolean>(false);\n\n  const updatePdfMode = () => {\n    setPdfMode(!pdfMode);\n  };\n  // const _setInvoice = (_invoice: Invoice) => {\n  //     setInvoice({...invoice, ..._invoice})\n  // };\n\n  return (\n    <div className=\"app\">\n      <h1 className=\"center fs-45 bold mt-100\">Invoice Generator</h1>\n      <p className=\"center fs-20 mb-100\">\n        Create, save and send invoices online in a single click.\n        <br />\n        Invoice Maker by Saldo Apps.\n      </p>\n      <div className={'gen-wrap--wrap'}>\n        <div className={'gen-wrap'}>\n          {!pdfMode && <InvoicePage invoice={invoice} setInvoice={setInvoice} pdfMode={pdfMode} />}\n          <Modal\n            innerClass={'preview-modal'}\n            headerClass={'header-modal'}\n            closeOnOverlayClick={true}\n            open={pdfMode}\n            onClose={() => setPdfMode(false)}\n          >\n            <InvoicePage invoice={invoice} setInvoice={setInvoice} pdfMode={pdfMode} />\n          </Modal>\n        </div>\n        <DownloadPDF data={invoice} updatePdfMode={updatePdfMode} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './scss/main.scss'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}